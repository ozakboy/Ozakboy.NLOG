<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ozakboy.NLOG</name>
    </assembly>
    <members>
        <member name="T:ozakboy.NLOG.LogConfiguration">
            <summary>
            LOG配置類別
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LogConfiguration.ReadOnlyLogTypeDirectories.GetPathForType(ozakboy.NLOG.Core.LogLevel)">
            <summary>
            取得指定日誌類型的目錄路徑
            </summary>
            <param name="logLevel">日誌類型</param>
            <returns>目錄路徑</returns>
        </member>
        <member name="T:ozakboy.NLOG.LogConfiguration.IAsyncLogOptions">
            <summary>
            異步日誌配置接口
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.IAsyncLogOptions.MaxBatchSize">
            <summary>
            批次處理的最大日誌數量
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.IAsyncLogOptions.MaxQueueSize">
            <summary>
            隊列的最大容量
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.IAsyncLogOptions.FlushIntervalMs">
            <summary>
            定期寫入的時間間隔（毫秒）
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.LogConfiguration.AsyncLogOptions">
            <summary>
            異步日誌配置選項
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.AsyncLogOptions.MaxBatchSize">
            <summary>
            批次處理的最大日誌數量
            默認值：100
            最小值：1，最大值：1000
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.AsyncLogOptions.MaxQueueSize">
            <summary>
            隊列的最大容量
            默認值：10000
            最小值：1000，最大值：100000
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.AsyncLogOptions.FlushIntervalMs">
            <summary>
            定期寫入的時間間隔（毫秒）
            默認值：1000ms
            最小值：100ms，最大值：10000ms
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.LogConfiguration.LogOptions">
            <summary>
            日誌配置選項
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogOptions.KeepDays">
            <summary>
            日誌檔案保存天數設定，預設為 -3 天（保存最近3天的日誌）
            請設定為負數，例如 -7 表示保存最近 7 天的日誌
            （請使用負數）
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogOptions.MaxFileSize">
            <summary>
            單個日誌檔案的最大大小限制，超過此大小將自動分割檔案
            預設為 50MB (50 * 1024 * 1024 bytes)
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogOptions.LogPath">
            <summary>
            日誌檔案根目錄
            默認為 logs
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogOptions.TypeDirectories">
            <summary>
            日誌類型目錄設定
            可為每種日誌類型配置不同的子目錄
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogOptions.EnableAsyncLogging">
            <summary>
            是否啟用異步寫入
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogOptions.EnableConsoleOutput">
            <summary>
            是否在控制台輸出
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LogConfiguration.LogOptions.SetFileSizeInMB(System.Int32)">
            <summary>
            設定檔案大小的便捷方法（以 MB 為單位）
            </summary>
            <param name="megabytes">檔案大小（MB）</param>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogOptions.AsyncOptions">
            <summary>
            異步日誌配置
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LogConfiguration.LogOptions.ConfigureAsync(System.Action{ozakboy.NLOG.LogConfiguration.AsyncLogOptions})">
            <summary>
            設定異步日誌配置
            </summary>
            <param name="configure">配置動作</param>
        </member>
        <member name="T:ozakboy.NLOG.LogConfiguration.LogTypeDirectories">
            <summary>
            日誌類型目錄配置
            用於配置不同類型日誌的存放目錄
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogTypeDirectories.DirectoryPath">
            <summary>
            所有日誌類型的預設目錄
            預設為 LogFiles
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogTypeDirectories.TracePath">
            <summary>
            追蹤日誌目錄，若為空則使用 DirectoryPath
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogTypeDirectories.DebugPath">
            <summary>
            除錯日誌目錄，若為空則使用 DirectoryPath
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogTypeDirectories.InfoPath">
            <summary>
            一般資訊日誌目錄，若為空則使用 DirectoryPath
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogTypeDirectories.WarnPath">
            <summary>
            警告日誌目錄，若為空則使用 DirectoryPath
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogTypeDirectories.ErrorPath">
            <summary>
            錯誤日誌目錄，若為空則使用 DirectoryPath
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogTypeDirectories.FatalPath">
            <summary>
            致命錯誤日誌目錄，若為空則使用 DirectoryPath
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogTypeDirectories.CustomPath">
            <summary>
            自定義日誌目錄，若為空則使用 DirectoryPath
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LogConfiguration.Initialize(System.Action{ozakboy.NLOG.LogConfiguration.LogOptions})">
            <summary>
            配置日誌系統
            </summary>
            <param name="configure">配置動作</param>
        </member>
        <member name="M:ozakboy.NLOG.LogConfiguration.GetCurrentOptions">
            <summary>
            取得當前配置
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LogConfiguration.EnsureInitialized">
            <summary>
            確保配置已初始化
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.Core.AsyncLogHandler">
            <summary>
            異步日誌處理器，負責管理日誌的異步寫入操作
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.AsyncLogHandler._logQueue">
            <summary>
            日誌隊列，用於存儲待處理的日誌項目
            使用 ConcurrentQueue 確保線程安全的入隊和出隊操作
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.AsyncLogHandler._signal">
            <summary>
            信號量，用於通知處理線程有新的日誌需要處理
            初始計數為0，每當有新日誌加入時會釋放一個信號
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.AsyncLogHandler._cancellationTokenSource">
            <summary>
            取消令牌源，用於控制處理線程的生命週期
            當需要停止處理線程時，可以通過此令牌發出取消信號
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.AsyncLogHandler._processTask">
            <summary>
            日誌處理任務，負責實際的日誌寫入操作
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.AsyncLogHandler._isInitialized">
            <summary>
            標記處理器是否已初始化
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.AsyncLogHandler._lockObj">
            <summary>
            用於初始化同步的鎖對象
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.AsyncLogHandler.CurrentAsyncOptions">
            <summary>
            獲取當前的異步配置
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.AsyncLogHandler._lastFlushTime">
            <summary>
            上次寫入的時間
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.Core.AsyncLogHandler.LogItem">
            <summary>
            日誌項目類，表示單個待處理的日誌條目
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.AsyncLogHandler.LogItem.Level">
            <summary>
            日誌級別
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.AsyncLogHandler.LogItem.Name">
            <summary>
            日誌名稱
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.AsyncLogHandler.LogItem.Message">
            <summary>
            日誌消息
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.AsyncLogHandler.LogItem.Args">
            <summary>
            日誌參數
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.AsyncLogHandler.LogItem.RequireImmediateFlush">
            <summary>
            是否需要立即寫入
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.AsyncLogHandler.Initialize">
            <summary>
            初始化異步日誌處理器
            確保處理線程只被創建一次
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.AsyncLogHandler.EnqueueLog(ozakboy.NLOG.Core.LogLevel,System.String,System.String,System.Object[],System.Boolean)">
            <summary>
            將日誌項目加入處理隊列
            </summary>
            <param name="level">日誌級別</param>
            <param name="name">日誌名稱</param>
            <param name="message">日誌消息</param>
            <param name="args">日誌參數</param>
            <param name="immediateFlush">是否需要立即寫入</param>
        </member>
        <member name="M:ozakboy.NLOG.Core.AsyncLogHandler.ProcessLogQueueAsync">
            <summary>
            異步處理日誌隊列中的項目
            這是處理線程的主要邏輯
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.AsyncLogHandler.ProcessSingleLog">
            <summary>
            處理單個日誌項
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.AsyncLogHandler.FlushAll">
            <summary>
            強制寫入所有待處理的日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.AsyncLogHandler.ShutdownAsync">
            <summary>
            關閉異步日誌處理器
            確保所有待處理的日誌都被寫入
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.Core.ExceptionHandler">
            <summary>
            異常處理器，負責異常資訊的收集和序列化
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.Core.ExceptionHandler.SerializableExceptionInfo">
            <summary>
            用於序列化的異常資訊類別，提供異常資訊的結構化存儲
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.ExceptionHandler.SerializableExceptionInfo.Type">
            <summary>
            異常類型的完整名稱
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.ExceptionHandler.SerializableExceptionInfo.Message">
            <summary>
            異常的錯誤訊息
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.ExceptionHandler.SerializableExceptionInfo.Source">
            <summary>
            異常來源
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.ExceptionHandler.SerializableExceptionInfo.HelpLink">
            <summary>
            異常的幫助連結
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.ExceptionHandler.SerializableExceptionInfo.StackTrace">
            <summary>
            異常的堆疊追蹤
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.ExceptionHandler.SerializableExceptionInfo.Data">
            <summary>
            異常的額外資料字典
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.ExceptionHandler.SerializableExceptionInfo.InnerException">
            <summary>
            內部異常資訊
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.ExceptionHandler.SerializableExceptionInfo.AdditionalProperties">
            <summary>
            額外的異常屬性
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.ExceptionHandler.GetFullExceptionMessage(System.Exception)">
            <summary>
            獲取完整的異常訊息文字，包含內部異常
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.ExceptionHandler.CreateSerializableException(System.Exception)">
            <summary>
            將異常轉換為可序列化的格式
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.ExceptionHandler.HandleSerializationException(System.Exception)">
            <summary>
            處理序列化異常的錯誤訊息
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.Core.LogFormatter">
            <summary>
            日誌格式化處理器
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.LogFormatter.FormatMessage(System.String,System.String[])">
            <summary>
            格式化日誌訊息
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.LogFormatter.EscapeMessage(System.String)">
            <summary>
            處理訊息中的特殊字符
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.Core.LogLevel">
            <summary>
            日誌級別
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.LogLevel.Trace">
            <summary>
            追蹤記錄檔
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.LogLevel.Debug">
            <summary>
            測試記錄檔
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.LogLevel.Info">
            <summary>
            訊息記錄檔
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.LogLevel.Warn">
            <summary>
            警告記錄檔
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.LogLevel.Error">
            <summary>
            錯誤記錄檔
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.LogLevel.Fatal">
            <summary>
            致命記錄檔
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.LogLevel.CostomName">
            <summary>
            自定義名稱Log記錄檔
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.Core.LogSerializer">
            <summary>
            日誌序列化處理器
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.LogSerializer.SerializeObject``1(``0)">
            <summary>
            序列化一般物件
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.LogSerializer.SerializeException(System.Exception)">
            <summary>
            序列化異常物件
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.Core.LogText">
            <summary>
            日誌檔案處理類別，負責日誌檔案的建立、寫入和管理
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.LogText.Add_LogText(ozakboy.NLOG.Core.LogLevel,System.String,System.String,System.Object[])">
            <summary>
            建立或是新增LOG紀錄
            </summary>
            <param name="level"></param>
            <param name="name"></param>
            <param name="Message"></param>
            <param name="arg"></param>
        </member>
        <member name="M:ozakboy.NLOG.Core.LogText.CheckDirectoryExistCreate(System.String)">
            <summary>
            判斷有無資料表 若沒有建立資料表
            </summary>
            <param name="LogPath"></param>
        </member>
        <member name="M:ozakboy.NLOG.Core.LogText.CheckFileExistCreate(System.String,System.String)">
            <summary>
            判斷有無檔案或檔案過大，若沒有或檔案過大則建立新檔案
            </summary>
            <param name="_LogPath">檔案路徑</param>
            <param name="_FileName">檔案名稱</param>
        </member>
        <member name="M:ozakboy.NLOG.Core.LogText.FileExistCreate(System.String)">
            <summary>
            判斷有無檔案，若沒有則建立新檔案
            </summary>
            <param name="_LogFilePath"></param>
        </member>
        <member name="M:ozakboy.NLOG.Core.LogText.Remove_TimeOutLogText">
            <summary>
            刪除超時紀錄檔
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.LOG">
            <summary>
            記錄檔
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Trace_Log(System.String)">
            <summary>
            記錄追蹤日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Trace_Log(System.String,System.Boolean)">
            <summary>
            記錄追蹤日誌，可控制是否寫入檔案
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Trace_Log(System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            記錄格式化的追蹤日誌，可控制寫入選項
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Trace_Log``1(``0,System.Boolean,System.Boolean)">
            <summary>
            記錄物件形式的追蹤日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Trace_Log``1(System.String,``0,System.Boolean,System.Boolean)">
            <summary>
            記錄帶有訊息的物件形式追蹤日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Debug_Log(System.String)">
            <summary>
            記錄調試日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Debug_Log(System.String,System.Boolean)">
            <summary>
            記錄調試日誌，可控制是否寫入檔案
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Debug_Log(System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            記錄格式化的調試日誌，可控制寫入選項
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Debug_Log``1(``0,System.Boolean,System.Boolean)">
            <summary>
            記錄物件形式的調試日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Debug_Log``1(System.String,``0,System.Boolean,System.Boolean)">
            <summary>
            記錄帶有訊息的物件形式調試日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Info_Log(System.String)">
            <summary>
            記錄資訊日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Info_Log(System.String,System.Boolean)">
            <summary>
            記錄資訊日誌，可控制是否寫入檔案
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Info_Log(System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            記錄格式化的資訊日誌，可控制寫入選項
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Info_Log``1(``0,System.Boolean,System.Boolean)">
            <summary>
            記錄物件形式的資訊日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Info_Log``1(System.String,``0,System.Boolean,System.Boolean)">
            <summary>
            記錄帶有訊息的物件形式資訊日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Warn_Log(System.String)">
            <summary>
            記錄警告日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Warn_Log(System.String,System.Boolean)">
            <summary>
            記錄警告日誌，可控制是否寫入檔案
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Warn_Log(System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            記錄格式化的警告日誌，可控制寫入選項
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Warn_Log``1(``0,System.Boolean,System.Boolean)">
            <summary>
            記錄物件形式的警告日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Warn_Log``1(System.String,``0,System.Boolean,System.Boolean)">
            <summary>
            記錄帶有訊息的物件形式警告日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Error_Log(System.String)">
            <summary>
            記錄錯誤日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Error_Log(System.String,System.Boolean)">
            <summary>
            記錄錯誤日誌，可控制是否寫入檔案
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Error_Log(System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            記錄格式化的錯誤日誌，可控制寫入選項
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Error_Log``1(``0,System.Boolean,System.Boolean)">
            <summary>
            記錄物件形式的錯誤日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Error_Log``1(System.String,``0,System.Boolean,System.Boolean)">
            <summary>
            記錄帶有訊息的物件形式錯誤日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Fatal_Log(System.String)">
            <summary>
            記錄致命錯誤日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Fatal_Log(System.String,System.Boolean)">
            <summary>
            記錄致命錯誤日誌，可控制是否寫入檔案
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Fatal_Log(System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            記錄格式化的致命錯誤日誌，可控制寫入選項
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Fatal_Log``1(``0,System.Boolean,System.Boolean)">
            <summary>
            記錄物件形式的致命錯誤日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Fatal_Log``1(System.String,``0,System.Boolean,System.Boolean)">
            <summary>
            記錄帶有訊息的物件形式致命錯誤日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.CustomName_Log(System.String,System.String)">
            <summary>
            記錄自定義類型日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.CustomName_Log(System.String,System.String,System.Boolean)">
            <summary>
            記錄自定義類型日誌，可控制是否寫入檔案
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.CustomName_Log(System.String,System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            記錄格式化的自定義類型日誌，可控制寫入選項
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.CustomName_Log``1(System.String,``0,System.Boolean,System.Boolean)">
            <summary>
            記錄物件形式的自定義類型日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.CustomName_Log``1(System.String,System.String,``0,System.Boolean,System.Boolean)">
            <summary>
            記錄帶有訊息的物件形式自定義類型日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Configure(System.Action{ozakboy.NLOG.LogConfiguration.LogOptions})">
            <summary>
            配置日誌系統
            </summary>
            <param name="configure">配置動作</param>
        </member>
        <member name="M:ozakboy.NLOG.LOG.GetCurrentOptions">
            <summary>
            取得當前日誌配置
            </summary>
        </member>
    </members>
</doc>
