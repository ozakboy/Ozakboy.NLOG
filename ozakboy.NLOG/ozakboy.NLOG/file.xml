<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ozakboy.NLOG</name>
    </assembly>
    <members>
        <member name="T:ozakboy.NLOG.LogConfiguration">
            <summary>
            LOG配置類別 - 提供日誌系統的全局配置管理
            Log Configuration Class - Provides global configuration management for the logging system
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.LogConfiguration._currentOptions">
            <summary>
            儲存當前的日誌配置選項
            Stores the current logging configuration options
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.LogConfiguration._isInitialized">
            <summary>
            標記日誌系統是否已經初始化
            Flag indicating whether the logging system has been initialized
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.Current">
            <summary>
            取得日誌系統當前的配置
            Gets the current configuration of the logging system
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.LogConfiguration.ILogOptions">
            <summary>
            日誌配置選項介面 - 定義可供外部讀取的配置項目
            Log Options Interface - Defines configuration items available for external reading
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.ILogOptions.KeepDays">
            <summary>
            日誌保留天數 - 定義日誌檔案的保存期限
            Log Retention Days - Defines how long log files are kept
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LogConfiguration.ReadOnlyLogTypeDirectories.GetPathForType(ozakboy.NLOG.Core.LogLevel)">
            <summary>
            取得指定日誌類型的目錄路徑
            </summary>
            <param name="logLevel">日誌類型</param>
            <returns>目錄路徑</returns>
        </member>
        <member name="T:ozakboy.NLOG.LogConfiguration.IAsyncLogOptions">
            <summary>
            異步日誌配置接口
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.IAsyncLogOptions.MaxBatchSize">
            <summary>
            批次處理的最大日誌數量
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.IAsyncLogOptions.MaxQueueSize">
            <summary>
            隊列的最大容量
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.IAsyncLogOptions.FlushIntervalMs">
            <summary>
            定期寫入的時間間隔（毫秒）
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.LogConfiguration.AsyncLogOptions">
            <summary>
            異步日誌配置選項
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.AsyncLogOptions.MaxBatchSize">
            <summary>
            批次處理的最大日誌數量
            默認值：100
            最小值：1，最大值：1000
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.AsyncLogOptions.MaxQueueSize">
            <summary>
            隊列的最大容量
            默認值：10000
            最小值：1000，最大值：100000
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.AsyncLogOptions.FlushIntervalMs">
            <summary>
            定期寫入的時間間隔（毫秒）
            默認值：1000ms
            最小值：100ms，最大值：10000ms
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.LogConfiguration.LogOptions">
            <summary>
            日誌配置選項
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogOptions.KeepDays">
            <summary>
            日誌檔案保存天數設定，預設為 -3 天（保存最近3天的日誌）
            請設定為負數，例如 -7 表示保存最近 7 天的日誌
            （請使用負數）
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogOptions.MaxFileSize">
            <summary>
            單個日誌檔案的最大大小限制，超過此大小將自動分割檔案
            預設為 50MB (50 * 1024 * 1024 bytes)
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogOptions.LogPath">
            <summary>
            日誌檔案根目錄
            默認為 logs
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogOptions.TypeDirectories">
            <summary>
            日誌類型目錄設定
            可為每種日誌類型配置不同的子目錄
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogOptions.EnableAsyncLogging">
            <summary>
            是否啟用異步寫入
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogOptions.EnableConsoleOutput">
            <summary>
            是否在控制台輸出
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LogConfiguration.LogOptions.SetFileSizeInMB(System.Int32)">
            <summary>
            設定檔案大小的便捷方法（以 MB 為單位）
            </summary>
            <param name="megabytes">檔案大小（MB）</param>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogOptions.AsyncOptions">
            <summary>
            異步日誌配置
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LogConfiguration.LogOptions.ConfigureAsync(System.Action{ozakboy.NLOG.LogConfiguration.AsyncLogOptions})">
            <summary>
            設定異步日誌配置
            </summary>
            <param name="configure">配置動作</param>
        </member>
        <member name="T:ozakboy.NLOG.LogConfiguration.LogTypeDirectories">
            <summary>
            日誌類型目錄配置
            用於配置不同類型日誌的存放目錄
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogTypeDirectories.DirectoryPath">
            <summary>
            所有日誌類型的預設目錄
            預設為 LogFiles
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogTypeDirectories.TracePath">
            <summary>
            追蹤日誌目錄，若為空則使用 DirectoryPath
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogTypeDirectories.DebugPath">
            <summary>
            除錯日誌目錄，若為空則使用 DirectoryPath
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogTypeDirectories.InfoPath">
            <summary>
            一般資訊日誌目錄，若為空則使用 DirectoryPath
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogTypeDirectories.WarnPath">
            <summary>
            警告日誌目錄，若為空則使用 DirectoryPath
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogTypeDirectories.ErrorPath">
            <summary>
            錯誤日誌目錄，若為空則使用 DirectoryPath
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogTypeDirectories.FatalPath">
            <summary>
            致命錯誤日誌目錄，若為空則使用 DirectoryPath
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.LogConfiguration.LogTypeDirectories.CustomPath">
            <summary>
            自定義日誌目錄，若為空則使用 DirectoryPath
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LogConfiguration.Initialize(System.Action{ozakboy.NLOG.LogConfiguration.LogOptions})">
            <summary>
            配置日誌系統
            </summary>
            <param name="configure">配置動作</param>
        </member>
        <member name="M:ozakboy.NLOG.LogConfiguration.GetCurrentOptions">
            <summary>
            取得當前配置
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LogConfiguration.EnsureInitialized">
            <summary>
            確保配置已初始化
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.Core.AsyncLogHandler">
            <summary>
            異步日誌處理器 - 負責管理日誌的異步寫入操作，提供高效能的日誌處理機制
            Asynchronous Log Handler - Manages asynchronous log writing operations, providing high-performance logging mechanism
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.AsyncLogHandler._logQueue">
            <summary>
            日誌隊列 - 用於存儲待處理的日誌項目
            Log Queue - Stores pending log items for processing
            </summary>
            <remarks>
            使用 ConcurrentQueue 確保線程安全的入隊和出隊操作
            Uses ConcurrentQueue to ensure thread-safe enqueue and dequeue operations
            </remarks>
        </member>
        <member name="F:ozakboy.NLOG.Core.AsyncLogHandler._signal">
            <summary>
            信號量，用於通知處理執行緒有新的日誌需要處理
            初始計數為0，每當有新日誌加入時會釋放一個信號
            Semaphore for notifying the processing thread of new logs
            Initial count is 0, releases a signal when new logs are added
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.AsyncLogHandler._cancellationTokenSource">
            <summary>
            取消權杖來源，用於控制處理程序的生命週期
            Cancellation token source for controlling the processor lifecycle
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.AsyncLogHandler._processTask">
            <summary>
            日誌處理任務，負責實際的日誌寫入操作
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.AsyncLogHandler._isInitialized">
            <summary>
            標記處理器是否已初始化
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.AsyncLogHandler._lockObj">
            <summary>
            用於初始化同步的鎖定物件
            Lock object for initialization synchronization
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.AsyncLogHandler.CurrentAsyncOptions">
            <summary>
            獲取當前的異步配置
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.AsyncLogHandler._lastFlushTime">
            <summary>
            最後一次寫入的時間戳記
            Last write timestamp
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.AsyncLogHandler.Initialize">
            <summary>
            初始化異步日誌處理器
            確保處理線程只被創建一次
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.AsyncLogHandler.EnqueueLog(ozakboy.NLOG.Core.LogLevel,System.String,System.String,System.Object[],System.Boolean)">
            <summary>
            將日誌項目加入處理隊列
            </summary>
            <param name="level">日誌級別</param>
            <param name="name">日誌名稱</param>
            <param name="message">日誌消息</param>
            <param name="args">日誌參數</param>
            <param name="immediateFlush">是否需要立即寫入</param>
        </member>
        <member name="M:ozakboy.NLOG.Core.AsyncLogHandler.ProcessLogQueueAsync">
            <summary>
            異步處理日誌隊列中的項目
            這是處理線程的主要邏輯
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.AsyncLogHandler.ProcessSingleLog">
            <summary>
            處理單個日誌項
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.AsyncLogHandler.FlushAll">
            <summary>
            強制寫入所有待處理的日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.AsyncLogHandler.ShutdownAsync">
            <summary>
            關閉異步日誌處理器
            確保所有待處理的日誌都被寫入
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.Core.ExceptionHandler">
            <summary>
            異常處理器 - 負責收集和序列化異常資訊
            Exception Handler - Responsible for collecting and serializing exception information
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.Core.ExceptionHandler.SerializableExceptionInfo">
            <summary>
            用於序列化的異常資訊類別 - 提供異常資訊的結構化存儲
            Serializable Exception Info Class - Provides structured storage for exception information
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.ExceptionHandler.SerializableExceptionInfo.Type">
            <summary>
            異常類型的完整名稱 - 包含命名空間的類型名稱
            Full Exception Type Name - Type name with namespace
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.ExceptionHandler.SerializableExceptionInfo.Message">
            <summary>
            異常的錯誤訊息 - 描述錯誤的具體內容
            Exception Message - Detailed description of the error
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.ExceptionHandler.SerializableExceptionInfo.Source">
            <summary>
            異常來源
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.ExceptionHandler.SerializableExceptionInfo.HelpLink">
            <summary>
            異常的幫助連結
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.ExceptionHandler.SerializableExceptionInfo.StackTrace">
            <summary>
            異常的堆疊追蹤
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.ExceptionHandler.SerializableExceptionInfo.Data">
            <summary>
            異常的額外資料字典
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.ExceptionHandler.SerializableExceptionInfo.InnerException">
            <summary>
            內部異常資訊
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.ExceptionHandler.SerializableExceptionInfo.AdditionalProperties">
            <summary>
            額外的異常屬性
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.ExceptionHandler.GetFullExceptionMessage(System.Exception)">
            <summary>
            獲取完整的異常訊息文字，包含內部異常
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.ExceptionHandler.CreateSerializableException(System.Exception)">
            <summary>
            將異常轉換為可序列化的格式
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.ExceptionHandler.HandleSerializationException(System.Exception)">
            <summary>
            處理序列化異常的錯誤訊息
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.Core.LogFormatter">
            <summary>
            日誌格式化處理器 - 負責將日誌內容轉換為標準格式
            Log Formatter - Responsible for converting log content into standardized format
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.LogFormatter.FormatMessage(System.String,System.String[])">
            <summary>
            格式化日誌訊息 - 將原始訊息轉換為包含時間戳記和執行緒 ID 的格式化訊息
            Format Log Message - Converts raw message into formatted message with timestamp and thread ID
            </summary>
            <param name="message">要格式化的訊息 / Message to format</param>
            <param name="args">格式化參數 / Formatting parameters</param>
            <returns>格式化後的訊息 / Formatted message</returns>
        </member>
        <member name="M:ozakboy.NLOG.Core.LogFormatter.EscapeMessage(System.String)">
            <summary>
            處理訊息中的特殊字符 - 確保訊息中的格式化字符被正確處理
            Handle Special Characters - Ensures format characters in messages are properly handled
            </summary>
            <param name="message">原始訊息 / Original message</param>
            <returns>處理後的訊息 / Processed message</returns>
        </member>
        <member name="T:ozakboy.NLOG.Core.LogItem">
            <summary>
            日誌項目類別 - 用於在不同組件間傳遞日誌資訊
            Log Item Class - Used for transferring log information between different components
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.LogItem.Level">
            <summary>
            日誌級別 - 定義日誌的重要程度
            Log Level - Defines the severity of the log entry
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.LogItem.Name">
            <summary>
            日誌名稱 - 用於識別日誌來源或類型
            Log Name - Used to identify the source or type of log
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.LogItem.Message">
            <summary>
            日誌訊息 - 記錄的實際內容
            Log Message - The actual content of the log entry
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.LogItem.Args">
            <summary>
            日誌參數 - 用於格式化日誌訊息的參數陣列
            Log Parameters - Array of parameters used for formatting log messages
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.LogItem.RequireImmediateFlush">
            <summary>
            是否需要立即寫入 - 控制日誌的即時性
            Immediate Flush Required - Controls whether the log needs immediate writing
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.Core.LogLevel">
            <summary>
            日誌級別
            Log Levels
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.LogLevel.Trace">
            <summary>
            追蹤記錄檔 - 用於追蹤程式執行的詳細流程
            Trace Log - Used for tracking detailed program execution flow
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.LogLevel.Debug">
            <summary>
            除錯記錄檔 - 用於開發階段的除錯訊息
            Debug Log - Used for debugging messages during development
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.LogLevel.Info">
            <summary>
            資訊記錄檔 - 記錄一般性的系統運作資訊
            Info Log - Records general system operational information
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.LogLevel.Warn">
            <summary>
            警告記錄檔 - 記錄可能影響系統運作但不致嚴重的問題
            Warning Log - Records potential issues that might affect system operation but are not severe
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.LogLevel.Error">
            <summary>
            錯誤記錄檔 - 記錄系統運作中的錯誤狀況
            Error Log - Records error conditions in system operation
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.LogLevel.Fatal">
            <summary>
            致命錯誤記錄檔 - 記錄導致系統無法運作的嚴重錯誤
            Fatal Log - Records severe errors that cause system failure
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.LogLevel.CostomName">
            <summary>
            自定義記錄檔 - 用於特定需求的客製化日誌類型
            Custom Log - Customized log type for specific requirements
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.Core.LogSerializer">
            <summary>
            日誌序列化處理器
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.LogSerializer._defaultOptions">
            <summary>
            預設的 JSON 序列化選項
            Default JSON serialization options
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.LogSerializer._exceptionOptions">
            <summary>
            異常序列化專用的 JSON 序列化選項
            JSON serialization options specifically for exceptions
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.LogSerializer.SerializeObject``1(``0)">
            <summary>
            序列化一般物件
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.LogSerializer.SerializeException(System.Exception)">
            <summary>
            序列化異常物件
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.Core.LogText">
            <summary>
            日誌檔案處理類別，負責日誌檔案的建立、寫入和管理
             支援單次寫入和批次寫入
            </summary>
        </member>
        <member name="F:ozakboy.NLOG.Core.LogText.lockMe">
            <summary>
            同步鎖定物件，用於確保日誌寫入的執行緒安全
            Synchronization lock object to ensure thread-safe log writing
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.LogText.Add_LogText(ozakboy.NLOG.Core.LogLevel,System.String,System.String,System.Object[])">
            <summary>
            建立或是新增單條LOG紀錄
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.LogText.Add_BatchLogText(System.Collections.Generic.IEnumerable{ozakboy.NLOG.Core.LogItem})">
            <summary>
            批次寫入多條日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.LogText.GetLogFileInfo(ozakboy.NLOG.Core.LogLevel,System.String)">
            <summary>
            獲取日誌檔案資訊
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.LogText.DetermineLogFile(ozakboy.NLOG.Core.LogText.LogFileInfo,System.String)">
            <summary>
            確定日誌檔案路徑和狀態
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.LogText.WriteLogsToFile(ozakboy.NLOG.Core.LogText.LogFileInfo,System.Collections.Generic.IEnumerable{ozakboy.NLOG.Core.LogItem})">
            <summary>
            批次寫入日誌到檔案
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.Core.LogText.Remove_TimeOutLogText">
            <summary>
            刪除超時紀錄檔
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.Core.LogText.LogFileInfo">
            <summary>
            日誌檔案資訊類別 - 用於管理單個日誌檔案的相關資訊
            Log File Information Class - Used to manage information related to a single log file
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.LogText.LogFileInfo.DirectoryPath">
            <summary>
            日誌檔案所在目錄的完整路徑
            Full path of the directory containing the log file
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.LogText.LogFileInfo.FilePath">
            <summary>
            日誌檔案的完整路徑
            Full path of the log file
            </summary>
        </member>
        <member name="P:ozakboy.NLOG.Core.LogText.LogFileInfo.RequiresNewFile">
            <summary>
            標記是否需要建立新的日誌檔案
            Flag indicating whether a new log file needs to be created
            </summary>
        </member>
        <member name="T:ozakboy.NLOG.LOG">
            <summary>
            記錄檔
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Trace_Log(System.String)">
            <summary>
            記錄追蹤日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Trace_Log(System.String,System.Boolean)">
            <summary>
            記錄追蹤日誌，可控制是否寫入檔案
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Trace_Log(System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            記錄格式化的追蹤日誌，可控制寫入選項
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Trace_Log``1(``0,System.Boolean,System.Boolean)">
            <summary>
            記錄物件形式的追蹤日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Trace_Log``1(System.String,``0,System.Boolean,System.Boolean)">
            <summary>
            記錄帶有訊息的物件形式追蹤日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Debug_Log(System.String)">
            <summary>
            記錄調試日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Debug_Log(System.String,System.Boolean)">
            <summary>
            記錄調試日誌，可控制是否寫入檔案
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Debug_Log(System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            記錄格式化的調試日誌，可控制寫入選項
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Debug_Log``1(``0,System.Boolean,System.Boolean)">
            <summary>
            記錄物件形式的調試日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Debug_Log``1(System.String,``0,System.Boolean,System.Boolean)">
            <summary>
            記錄帶有訊息的物件形式調試日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Info_Log(System.String)">
            <summary>
            記錄資訊日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Info_Log(System.String,System.Boolean)">
            <summary>
            記錄資訊日誌，可控制是否寫入檔案
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Info_Log(System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            記錄格式化的資訊日誌，可控制寫入選項
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Info_Log``1(``0,System.Boolean,System.Boolean)">
            <summary>
            記錄物件形式的資訊日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Info_Log``1(System.String,``0,System.Boolean,System.Boolean)">
            <summary>
            記錄帶有訊息的物件形式資訊日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Warn_Log(System.String)">
            <summary>
            記錄警告日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Warn_Log(System.String,System.Boolean)">
            <summary>
            記錄警告日誌，可控制是否寫入檔案
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Warn_Log(System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            記錄格式化的警告日誌，可控制寫入選項
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Warn_Log``1(``0,System.Boolean,System.Boolean)">
            <summary>
            記錄物件形式的警告日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Warn_Log``1(System.String,``0,System.Boolean,System.Boolean)">
            <summary>
            記錄帶有訊息的物件形式警告日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Error_Log(System.String)">
            <summary>
            記錄錯誤日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Error_Log(System.String,System.Boolean)">
            <summary>
            記錄錯誤日誌，可控制是否寫入檔案
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Error_Log(System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            記錄格式化的錯誤日誌，可控制寫入選項
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Error_Log``1(``0,System.Boolean,System.Boolean)">
            <summary>
            記錄物件形式的錯誤日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Error_Log``1(System.String,``0,System.Boolean,System.Boolean)">
            <summary>
            記錄帶有訊息的物件形式錯誤日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Fatal_Log(System.String)">
            <summary>
            記錄致命錯誤日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Fatal_Log(System.String,System.Boolean)">
            <summary>
            記錄致命錯誤日誌，可控制是否寫入檔案
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Fatal_Log(System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            記錄格式化的致命錯誤日誌，可控制寫入選項
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Fatal_Log``1(``0,System.Boolean,System.Boolean)">
            <summary>
            記錄物件形式的致命錯誤日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Fatal_Log``1(System.String,``0,System.Boolean,System.Boolean)">
            <summary>
            記錄帶有訊息的物件形式致命錯誤日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.CustomName_Log(System.String,System.String)">
            <summary>
            記錄自定義類型日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.CustomName_Log(System.String,System.String,System.Boolean)">
            <summary>
            記錄自定義類型日誌，可控制是否寫入檔案
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.CustomName_Log(System.String,System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            記錄格式化的自定義類型日誌，可控制寫入選項
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.CustomName_Log``1(System.String,``0,System.Boolean,System.Boolean)">
            <summary>
            記錄物件形式的自定義類型日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.CustomName_Log``1(System.String,System.String,``0,System.Boolean,System.Boolean)">
            <summary>
            記錄帶有訊息的物件形式自定義類型日誌
            </summary>
        </member>
        <member name="M:ozakboy.NLOG.LOG.Configure(System.Action{ozakboy.NLOG.LogConfiguration.LogOptions})">
            <summary>
            配置日誌系統
            </summary>
            <param name="configure">配置動作</param>
        </member>
        <member name="M:ozakboy.NLOG.LOG.GetCurrentOptions">
            <summary>
            取得當前日誌配置
            </summary>
        </member>
    </members>
</doc>
